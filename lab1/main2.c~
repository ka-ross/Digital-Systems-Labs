/*
ChibiOS - Copyright (C) 2006-2014 Giovanni Di Sirio

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

#include "ch.h"
#include "hal.h"
#include "test.h"
#include "chprintf.h"
#include <chstreams.h>
#include <string.h>
#include <stdio.h>
#include <stdarg.h>

#define UNUSED(x) (void)(x)

/* Thread for timer */
/*static THD_WORKING_AREA(waTimeThread, 128);
static THD_FUNCTION(timeThread, arg) {
UNUSED(arg);
while(TRUE) {
s
*/


/* Thread for user input */
static THD_WORKING_AREA(waSThread, 128);
static THD_FUNCTION(sThread, arg) {
  UNUSED(arg);
  uint8_t ch;
  uint8_t buffer[6];
  uint8_t place = 0;
  while(true){
    chnRead((BaseSequentialStream*)&SD1,&ch,1);
    //chprintf((BaseSequentialStream*)&SD1, "%d",ch);
    //chnWrite((BaseSequentialStream*)&SD1,&ch,1);
    if(ch == 115){
      place = 0;
      while(true) {
chnRead((BaseSequentialStream*)&SD1,&ch,1);
if(place<5 && ch <= 57 && ch >= 48) {
chnWrite((BaseSequentialStream*)&SD1,&ch,1);
buffer[place] = ch;
place++;
}
if (ch == 10) {
break;
}
      }
      buffer[place] = '\0';
      //chprintf((BaseSequentialStream*)&SD1, "%c",buffer[1]);
      chnWrite((BaseSequentialStream*)&SD1,&buffer,place);
    }
  }

}

/*
* Application entry point.
*/

int main(void) {
  /*
* System initializations.
* - HAL initialization, this also initializes the configured device drivers
* and performs the board-specific initializations.
* - Kernel initialization, the main() function becomes a thread and the
* RTOS is active.
*/
  halInit();
  chSysInit();

  /*
* Activates the serial driver 1 using the driver default configuration.
* PC4(RX) and PC5(TX). The default baud rate is 9600.
*/
  sdStart(&SD1, NULL);
  palSetPadMode(GPIOC, 4, PAL_MODE_ALTERNATE(7));
  palSetPadMode(GPIOC, 5, PAL_MODE_ALTERNATE(7));
  chprintf((BaseSequentialStream*)&SD1, "\n\rUp and Running\n\r");

  /*
* Creates the threads.
*/
  chThdCreateStatic(waSThread, sizeof(waSThread), NORMALPRIO+1, sThread, NULL);

  /*
Main spins here while the threads do all of the work.
*/
  while (TRUE);
}
